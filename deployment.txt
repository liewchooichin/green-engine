# Deploying to Azure Web app

az webapp up [--app-service-environment]
             [--basic-auth {Disabled, Enabled}]
             [--dryrun]
             [--html]
             [--ids]
             [--launch-browser]
             [--location]
             [--logs]
             [--name]
             [--os-type {Linux, Windows}]
             [--plan]
             [--resource-group]
             [--runtime]
             [--sku {B1, B2, B3, D1, F1, FREE, I1, I1MV2, I1V2, I2, I2MV2, I2V2, I3, I3MV2, I3V2, I4MV2, I4V2, I5MV2, I5V2, I6V2, P0V3, P1MV3, P1V2, P1V3, P2MV3, P2V2, P2V3, P3MV3, P3V2, P3V3, P4MV3, P5MV3, S1, S2, S3, SHARED, WS1, WS2, WS3}]
             [--subscription]
             [--track-status {false, true}]

az webapp up --dryrun --resource-group DefaultResourceGroup-SEA --name django 
--runtime PYTHON:3.10 --location "Southeast Asia" --logs

Webapp 'django' already exists. The command will deploy contents to the existing app.
Web app will be created with the below configuration,re-run command without the --dryrun flag to create & deploy a new app
{
  "appserviceplan": "ASP-DefaultResourceGroupSEA-95fb",
  "location": "southeastasia",
  "name": "django",
  "os": "Linux",
  "resourcegroup": "DefaultResourceGroup-SEA",
  "runtime_version": "PYTHON|3.10",
  "runtime_version_detected": "-",
  "sku": "FREE",
  "src_path": "//workspaces//green-engine"
}